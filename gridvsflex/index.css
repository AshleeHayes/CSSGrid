.flexbox-header {
    display: flex;
}

.flexbox-header > div:nth-child(3) {
    margin-left: auto;
}

.grid-page {
    display: grid;
    grid-template-columns: repeat(12, 1fr);
    grid-template-rows: 40px 200px 40px;
}

.header {
    grid-column: 1 / -1;
    display: flex;
   }

   .header > div:nth-child(3) {
       margin-left: auto;
   }

.menu {
    grid-column: 1 / 2;
}

.content {
    grid-column: 2 / -1;
}

.footer {
    grid-column: 1 / -1;
}


/*
Flex box- 1D layouts, great for aligning content in one layer. Content first.
Grid- 2D layouts, overall layout with both rows and columns. simpler markup and more flexibility. Layout first. 

Flex- turns into a "flexible box", then let content make most of the decisions about where things are places

Grid- must define rows and columns first, create the layout first. Constrained by the layout you define. items  must be placed according to layout. 

*/
